(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["framewrangler"] = factory();
	else
		root["framewrangler"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/framer.js":
/*!***********************!*\
  !*** ./src/framer.js ***!
  \***********************/
/*! exports provided: Framer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Framer\", function() { return Framer; });\nconst OPTS = {\n    offset: function(frate){return 0.3*frate},\n    playbackCoef: 1.25\n}\n\nclass Framer {\n    constructor(video, frameRate, opts=OPTS) {\n        this.video = video;\n        ///////////////////////////////////////////////////////////////////////\n        // FRAME VARIABLES\n        //\n        // framerate\n        // As of writing this, I know of no good way to determine framerate in\n        // javascript. Thus is needs to be supplied.\n        //\n        //\n        ///////////////////////////////////////////////////////////////////////\n        this.FRAMERATE = frameRate;\n        this.FRAME_DURATION = 1/this.FRAMERATE;\n        this.playbackFactor = 0;\n\n        this.opts = OPTS;\n        if (this.opts !== undefined && opts.offset !== undefined) {\n            this.offset = this.opts.offset(this.FRAMERATE);\n        } else {\n            this.offset = OPTS.offset(this.FRAMERATE);\n        }\n        if (this.opts !== undefined && opts.playbackCoef !== undefined) {\n            this.playbackCoef = this.opts.playbackCoef;\n        } else {\n            this.playbackCoef = OPTS.playbackCoef;\n        }\n\n        ///////////////////////////////////////////////////////////////////////\n        // Set up listeners\n        ///////////////////////////////////////////////////////////////////////\n        this.events = {\n            \"frameupdate\": [],\n            \"playbackSpeedChange\": []\n        }\n\n        this._setupVideoEvents();\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    // main functions\n    ////////////////////////////////////////////////////////////////////////////\n    getTime() {\n        return this.video.currentTime;\n    }\n\n    setFrame(frame, force=false) {\n        if (force || frame != this.getFrame())\n            this.video.currentTime = this.FRAME_DURATION * frame + this.offset;\n        return {frame: frame, time: this.getTime()}\n    }\n\n    getFrame() {\n        return Math.floor(this.video.currentTime / this.FRAME_DURATION);\n    }\n\n    stepForward(n=1) {\n        this.frameupdate(this.setFrame(this.getFrame() + n));\n    }\n\n    stepBackward(n=1) {\n        this.frameupdate(this.setFrame(this.getFrame() - n));\n    }\n    \n    setPlayback(rate) {\n        this.video.playbackRate = rate;\n    }\n\n    speedUp() {\n        this.playbackFactor = this.playbackFactor + 1;\n        this.setPlayback(this.playbackCoef ** this.playbackFactor);\n    }\n\n    slowDown() {\n        this.playbackFactor = this.playbackFactor - 1;\n        this.setPlayback(this.playbackCoef ** this.playbackFactor);\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    // Modify Video Events\n    ////////////////////////////////////////////////////////////////////////////\n    _setupVideoEvents() {\n        this.video.addEventListener(\"pause\", () => {this._onpause()});\n        this.video.addEventListener(\"seeked\", () => {this._onseeked()});\n        this.video.addEventListener(\"mouseup\", () => {this._onmouseup()});\n        this.video.addEventListener(\"timeupdate\", () => {\n            this.frameupdate({frame: this.getFrame(), time: this.getTime()});\n        });\n        this.video.addEventListener(\"ratechange\", () => {\n            this.playbackSpeedChange({speed: this.video.playbackRate});\n        });\n    }\n\n    _onpause() {\n        this.frameupdate(this.setFrame(this.getFrame(), true));\n    }\n\n    _onmouseup() {\n        this.frameupdate(this.setFrame(this.getFrame(), true));\n    }\n\n    _onseeked() {\n        this.frameupdate(this.setFrame(this.getFrame()));\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    // Events\n    ////////////////////////////////////////////////////////////////////////////\n    frameupdate(event) {\n        this.events[\"frameupdate\"].forEach(f => f(event));\n    }\n\n    playbackSpeedChange(event) {\n        this.events[\"playbackSpeedChange\"].forEach(f => f(event));\n    }\n\n    ////////////////////////////////////////////////////////////////////////////\n    // Listeners\n    ////////////////////////////////////////////////////////////////////////////\n\n    addEventListener(name, handler) {\n        this.events[name].push(handler);\n    }\n\n    removeEventListener(name, handler) {\n        if (!this.events.hasOwnProperty(name)) return;\n        const index = this.events[name].indexOf(handler);\n        if (index != -1)\n            this.events[name].splice(index, 1);\n    }\n}\n\n\n\n//# sourceURL=webpack://framewrangler/./src/framer.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: Framer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _framer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./framer */ \"./src/framer.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Framer\", function() { return _framer__WEBPACK_IMPORTED_MODULE_0__[\"Framer\"]; });\n\n\n\n\n//# sourceURL=webpack://framewrangler/./src/index.js?");

/***/ })

/******/ });
});